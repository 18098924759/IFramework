<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
  </configSections>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <alias alias="PerMessageOrExecutionContext" type="IFramework.Infrastructure.Unity.LifetimeManagers.PerMessageOrExecutionContextLifetimeManager, IFramework" />
    <alias alias="IMessageConsumer" type="IFramework.Message.IMessageConsumer, IFramework" />
    <alias alias="EventSubscriber" type="IFramework.Event.Impl.EventSubscriber, IFramework" />
    <alias alias="IMessagePublisher" type="IFramework.Message.IMessagePublisher, IFramework" />
    <alias alias="MessagePublisher" type="IFramework.Message.Impl.MessagePublisher, IFramework" />
    <alias alias="IMessageQueueClient" type="IFramework.MessageQueue.IMessageQueueClient, IFramework" />
    <alias alias="ServiceBusClient" type="IFramework.MessageQueue.ServiceBus.ServiceBusClient, IFramework.MessageQueue.ServiceBus" />
    <alias alias="ILinearCommandManager" type="IFramework.Command.ILinearCommandManager, IFramework" />
    <alias alias="LinearCommandManager" type="Sample.Command.LinearCommandManager, Sample.Command" />
    <alias alias="ICommandBus" type="IFramework.Command.ICommandBus, IFramework" />
    <alias alias="CommandBus" type="IFramework.Command.Impl.CommandBus, IFramework" />
    <alias alias="ICommandHandlerProvider" type="IFramework.Command.ICommandHandlerProvider, IFramework" />
    <alias alias="CommandHandlerProvider" type="IFramework.Command.Impl.CommandHandlerProvider, IFramework" />
    <alias alias="IHandlerProvider" type="IFramework.Message.IHandlerProvider, IFramework" />
    <alias alias="IEventSubscriberProvider" type="IFramework.Event.IEventSubscriberProvider, IFramework" />
    <alias alias="EventSubscriberProvider" type="IFramework.Event.Impl.EventSubscriberProvider, IFramework" />
    <alias alias="IUnitOfWork" type="IFramework.UnitOfWork.IUnitOfWork, IFramework" />
    <alias alias="UnitOfWork" type="IFramework.EntityFramework.UnitOfWork, IFramework.EntityFramework" />
    <alias alias="IEventBus" type="IFramework.Event.IEventBus, IFramework" />
    <alias alias="EventBus" type="IFramework.Event.Impl.EventBus, IFramework" />
    <alias alias="IMessageStore" type="IFramework.Message.IMessageStore, IFramework" />
    <alias alias="MessageStore" type="IFramework.MessageStoring.MessageStore, IFramework.MessageStoring.EntityFramework" />
    <alias alias="SampleModelContext" type="Sample.Persistence.SampleModelContext, Sample.Persistence" />
    <alias alias="RepositoryImpl" type="IFramework.EntityFramework.Repositories.Repository`1,  IFramework.EntityFramework" />
    <!--<alias alias="IMessageContext" type="IFramework.Message.IMessageContext, IFramework" ></alias>
    <alias alias="MessageContext" type="IFramework.MessageQueue.ServiceBus.MessageFormat.MessageContext, IFramework.MessageQueue.ServiceBus" ></alias>-->
    <container>
      <!--<register type="IMessageStore" mapTo="SampleModelContext">
        <lifetime type="PerMessageOrExecutionContext" />
      </register>
      <register name="perResolveMessageStore" type="IMessageStore" mapTo="SampleModelContext">
      </register>-->
      <register type="ILinearCommandManager" mapTo="LinearCommandManager">
        <lifetime type="singleton" />
      </register>
      <register type="ICommandBus" mapTo="CommandBus">
        <lifetime type="singleton" />
        <constructor>
          <param name="messageQueueClient" dependencyType="IMessageQueueClient"></param>
          <param name="linearCommandManager" dependencyType="LinearCommandManager" />
          <param name="commandQueueNames">
            <array>
              <value value="commandqueue1" />
              <!--<value value="commandqueue2" />
              <value value="commandqueue3" />-->
            </array>
          </param>
          <param name="replyTopicName" value="replyTopic" />
          <param name="replySubscriptionName" value="replySubscritpionTest" />
          <param name="needMessageStore" value="false"></param>
        </constructor>
      </register>
      <!--<register type="ICommandBus" mapTo="DistributableCommandBus">
        <lifetime type="singleton" />
        <constructor>
          <param name="handlerProvider" dependencyType="CommandHandlerProvider" />
          <param name="linearCommandManager" dependencyType="LinearCommandManager" />
          <param name="commandConsumer" dependencyName="CommandDistributor"></param>
          <param name="receiveEndPoint" value="inproc://commandBus" />
          <param name="inProc" value="true" />
        </constructor>
      </register>-->
      <!--<register type="IUnitOfWork" mapTo="UnitOfWork">
        <lifetime type="PerMessageOrExecutionContext" />
      </register>
      <register type="ICommandHandlerProvider" mapTo="CommandHandlerProvider">
        <lifetime type="singleton" />
      </register>
      <register type="IEventSubscriberProvider" mapTo="EventSubscriberProvider">
        <lifetime type="singleton" />
        <constructor>
          <param name="assemblies">
            <array>
              <value value="DomainEventSubscriber" />
            </array>
          </param>
        </constructor>
      </register>
      <register name="AsyncDomainEventProvider" type="IHandlerProvider" mapTo="EventSubscriberProvider">
        <lifetime type="singleton" />
        <constructor>
          <param name="assemblies">
            <array>
              <value value="AsyncDomainEventSubscriber" />
            </array>
          </param>
        </constructor>
      </register>
      <register name="DomainEventSubscriber" type="IMessageConsumer" mapTo="EventSubscriber">
        <lifetime type="singleton" />
        <constructor>
          <param name="messageQueueClient" dependencyType="IMessageQueueClient" />
          <param name="handlerProvider" dependencyName="AsyncDomainEventProvider" />
          <param name="commandBus" dependencyType="ICommandBus"></param>
          <param name="messagePublisher" dependencyType="IMessagePublisher"></param>
          <param name="subscriptionName" value="eventSubscriber" />
          <param name="topics">
            <array>
              <value value="DomainEventTopic" />
            </array>
          </param>
        </constructor>
      </register>
      <register name="ApplicationEventProvider" type="IHandlerProvider" mapTo="EventSubscriberProvider">
        <lifetime type="singleton" />
        <constructor>
          <param name="assemblies">
            <array>
              <value value="ApplicationEventSubscriber" />
            </array>
          </param>
        </constructor>
      </register>
      <register name="ApplicationEventConsumer" type="IMessageConsumer" mapTo="EventSubscriber">
        <lifetime type="singleton" />
        <constructor>
          <param name="messageQueueClient" dependencyType="IMessageQueueClient" />
          <param dependencyName="ApplicationEventProvider" name="handlerProvider" />
          <param name="commandBus" dependencyType="ICommandBus"></param>
          <param name="messagePublisher" dependencyType="IMessagePublisher"></param>
          <param name="subscriptionName" value="appEventSubscriber" />
          <param name="topics">
            <array>
              <value value="AppEventTopic" />
            </array>
          </param>
        </constructor>
      </register>-->
      <instance name="serviceBusConnectionString" value="Endpoint=sb://dev.r-soft.cn/ServiceBusDefaultNamespace;StsEndpoint=https://dev.r-soft.cn:1552/ServiceBusDefaultNamespace;RuntimePort=1553;ManagementPort=1552;OAuthUsername=ivan;OAuthPassword=DevPassword01!" />
      <!--<instance name="serviceBusConnectionString" value="Endpoint=sb://iframework.servicebus.chinacloudapi.cn/;StsEndpoint=https://iframework-sb.accesscontrol.chinacloudapi.cn/;SharedSecretIssuer=owner;SharedSecretValue=DfDIfwLDgVK4Ujx0iDmuUAFxYIkX+iFSnQFqw5BtpSw=" />-->
      <register type="IMessageQueueClient" mapTo="ServiceBusClient">
        <constructor>
          <param name="serviceBusConnectionString" dependencyName="serviceBusConnectionString" />
        </constructor>
      </register>
      <!--<register type="IMessagePublisher" mapTo="MessagePublisher">
        <lifetime type="singleton" />
        <constructor>
          <param name="messageQueueClient" dependencyType="IMessageQueueClient" />
          <param name="defaultTopic" value="messageTopic" />
        </constructor>
      </register>-->
      <!--<register type="IEventBus" mapTo="EventBus">
        <lifetime type="PerMessageOrExecutionContext" />
        <constructor>
          <param name="provider" dependencyType="IEventSubscriberProvider" />
        </constructor>
      </register>-->
      <!--<register type="IFramework.Repositories.IDomainRepository, IFramework" mapTo="IFramework.EntityFramework.Repositories.DomainRepository, IFramework.EntityFramework" />
      <register type="IFramework.Repositories.IRepository`1, IFramework" mapTo="RepositoryImpl" />-->
      <!--<register type="SampleModelContext" mapTo="SampleModelContext">
        <lifetime type="PerMessageOrExecutionContext" />
      </register>-->
    </container>
  </unity>

</configuration>